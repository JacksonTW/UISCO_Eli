unit UIS_CHECK_MANA_DM;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, UpdateComp, DB, DBTables, EEPBDEDB;

type
  TUIS_CHECK_MANA_SEL = class(TDataModule)
    ServiceManager: TServiceManager;
    BDEDatabase: TEEPBDEDatabase;
    qryUIS_check_mana: TQuery;
    updUIS_check_mana: TUpdateComponent;
    qExec: TQuery;
    Q1: TQuery;
    procedure change_to_acc1CallMethod(Params: Variant;
      out ReturnVal: Variant);
    procedure change_to_acc2CallMethod(Params: Variant;
      out ReturnVal: Variant);
  private
    { Private declarations }
  procedure InsertFlowRM    (D_FLOW_ID,D_STEP_ID,aKEY,FLOW_ID,aRM : String);
  procedure InsertSlip_H    (aSEQ_NO,aDT_SLIP,aAMT,aCREATE_DATE,aUserID,aDEPT_NO,aBILLNO : String);
  procedure InsertSlip_D    (aSEQ_NO, aSeqCnt, aDEPT_NO, aID_ACC,aID_SUB
                             ,aDBCR_CODE,aID_CRNCY,aRI_EXCHG,aAM_DB,aAM_CR,aAM_ORG_DB,aAM_ORG_CR
                             ,aNM_ACC,aNM_SUB,aRM_SLIP,aDT_EXPIRE,aNN_NOTE,aBILLNO,aNO_PROJ,aID_SUB2,aNM_SUB2,aFG_SETL : String;
                             const aNO_SLIP_P : String='';const aCN_SEQ_P : String='';const aDT_AMT_RCV : String='';const aID_SAM : String='');

  public
    { Public declarations }
  end;

var
  UIS_CHECK_MANA_SEL: TUIS_CHECK_MANA_SEL;

implementation

{$R *.DFM}

uses
  CommonUtils,DATETIMEUTILS,UpdateAssistant;
  //-----------------------------------------------------------------------
procedure TUIS_CHECK_MANA_SEL.InsertFlowRM  (
                                              D_FLOW_ID, D_STEP_ID
                                            , aKEY, FLOW_ID,  aRM: String
                                            );
var
  s : String;
begin
  s := FLOW_ID+' '+aRM;

  Q1.SQL.Text := 'UPDATE WF_TODOLIST SET REMARK = '''+s+''' '+
                    'WHERE FLOW_ID = '''+D_FLOW_ID+''' '+
                    'AND D_STEP_ID = '''+D_STEP_ID+''' '+
                    'AND FORM_PRESENTATION = '''+aKEY+''' ';
   Q1.ExecSQL;
end;
------------------------------------------------------------------------------------------------------------
procedure TUIS_CHECK_MANA_SEL.InsertSlip_D  (
                                              aSEQ_NO, aSeqCnt, aDEPT_NO, aID_ACC,
                                              aID_SUB, aDBCR_CODE, aID_CRNCY, aRI_EXCHG,
                                              aAM_DB, aAM_CR, aAM_ORG_DB,aAM_ORG_CR,
                                              aNM_ACC, aNM_SUB, aRM_SLIP, aDT_EXPIRE,
                                              aNN_NOTE,aBILLNO,aNO_PROJ,aID_SUB2,aNM_SUB2,
                                              aFG_SETL : String;
                                              const aNO_SLIP_P, aCN_SEQ_P, aDT_AMT_RCV, aID_SAM: String
                                            );
var
  aSQL : String;
begin
  aSQL := 'INSERT INTO FAC3SLIP_D(NO_APPLY,CN_SEQ,ID_DEPT,ID_ACC,'
        +'ID_SUB,FG_DBCR,ID_CRNCY,RI_EXCHG,AM_DB,'
        +'AM_CR,AM_ORG_DB,AM_ORG_CR,NM_ACC,NM_SUB,'
        +'RM_SLIP,NN_NOTE,BILLNO,NO_PROJ,ID_SUB2,NM_SUB2,DT_EXPIRE,'
        +'FG_SETL,NO_SLIP_P,CN_SEQ_P,ID_SAM ) '
        +'VALUES  ( '''+aSEQ_NO+''','''+aSeqCnt+''','''+aDEPT_NO+''','''+aID_ACC+''','''+aID_SUB+''','''+aDBCR_CODE+''','''+aID_CRNCY+''','+aRI_EXCHG+','+aAM_DB+','+aAM_CR+','+aAM_ORG_DB+','+aAM_ORG_CR+','''+aNM_ACC+''','''+aNM_SUB+''','''+aRM_SLIP+''','''+aNN_NOTE+''','''+aBILLNO+''','''+aNO_PROJ+''','''+aID_SUB2+''','''+aNM_SUB2+''','''+aDT_EXPIRE+''','''+aFG_SETL+''','''+aNO_SLIP_P+''','''+aCN_SEQ_P+''','''+aID_SAM+''')  ';

  Q1.SQL.Text := aSQL;
  Q1.ExecSQL;          // leo 20200302 調整 database alias 由HRS_ACC 到  BDEDatabase,否則 測試區 無法抓到傳票主檔資料,待辦會錯誤
end;

//----------H------------------------------------------------------------------
procedure TUIS_CHECK_MANA_SEL.InsertSlip_H  (
                                              aSEQ_NO, aDT_SLIP, aAMT, aCREATE_DATE,
                                              aUserID, aDEPT_NO,aBILLNO: String
                                            );
var
  aSQL : String;
begin
  aSQL := 'INSERT INTO FAC3SLIP (
                                  NO_APPLY,ID_APPLY,ID_DEPT_APPLY,DT_APPLY,DT_SLIP,'
                                +'ID_CLASS ,ID_KIND ,AM_DB,AM_CR ,RM ,BILLTYPE ,UPDATE_USER ,UPDATE_DATE,BILLNO) '
                                +'VALUES  (
                                            '''+aSEQ_NO+''','''+aUserID+''','''+aDEPT_NO+''','''+aCREATE_DATE+''','''+aDT_SLIP+''',''F'',''SLIP'','+aAMT+','+aAMT+','''',''FG01'','''+aUserID+''','''+aCREATE_DATE+''','''+aBILLNO+'''
                                          )';
  Q1.SQL.Text := aSQL;
  Q1.ExecSQL;               // leo 20200302 調整 database alias 由HRS_ACC 到  BDEDatabase,否則 測試區 無法抓到傳票主檔資料,待辦會錯誤
end;


//------------------------------收票-----------------------------------------

procedure TUIS_CHECK_MANA_SEL.change_to_acc1CallMethod  (
                                                          Params: Variant;
                                                          out ReturnVal: Variant
                                                        );
var

  aINCOME_NO,STATUS,str,str1,SUMMARY,TAX,T0,T1,T2,T3,ID1,ID2,aLogin_id1,aLogin_id2,aSEQ_NO,aCREATE_DATE:STRING;
  aDEPT_NO1,aDEPT_NO2,aDBCR_CODE,aDT_EXPIRE,aFG_SETL,aNN_NOTE,aID_SUB2,aNM_SUB2,NO_SLIP_P,CN_SEQ_P,aID_CRNCY:string;
  aNM_ACC,aNM_SUB,aRM_SLIP,pcode,aDT_AMT_RCV,aID_DEPT,aID_SAM,IN_STR,pay_date,N1,n2,n3,n4:string;

  i,j,K,K1,K2,S,m,o1,o2,o3,o4:integer;

  aRI_EXCHG,aAM_ORG_CR,aAM_CR,aAM_DB,aAM_ORG_DB:currency;

  vInput:Variant;

  F:TextFile;

  A:array[0..3] of string;
begin
  aINCOME_NO:=Params[0]; //票據號碼
  aLogin_id1:=Params[4];//作帳人員ID
  aLogin_id2:=Params[4];//會計人員ID
  pay_date:=Params[5]; //支付日期

  //RAISE EXCEPTION.Create(aLogin_id2);

  aDT_EXPIRE:=pay_date;

  aDEPT_NO1:=copy(aLogin_id1,1,2)+'00';  //作帳人員 部門代號
  aDEPT_NO2:=copy(aLogin_id2,1,2)+'00';  //會計人員 部門代號


  A[0]:='';A[1]:='000';A[2]:='00';A[3]:='0';//判斷傳票號碼
  STATUS:='DEF';
  str1:='';
      //--------------------------------------------------------------
// IF FileExists('C:\EEP_7\download\'+aINCOME_NO+'.txt')=FALSE THEN BEGIN
      //--------------------------------------------------------------
        //aSEQ_NO----傳票申請號碼
        //aCREATE_DATE----申請日期
        //aRI_EXCHG----匯率
        aCREATE_DATE := FormatDateTime('yyyymmdd',Now);
        aSEQ_NO := FlowGetAutoNoEx(ServiceManager,'FAC01','DT_APPLY='+aCREATE_DATE+';ID_CLASS=D');
        aRI_EXCHG := 1;
        aDBCR_CODE := 'D';
        aID_CRNCY:='NTD';
        S:=10;                 //新增明細序號
   //--------------------------------------------------------------




    //AssignFile(F,'C:\EEP_7\download\'+aINCOME_NO+'.txt');
    //Rewrite(F);
    summary:='0';

//     for i:=1 to qExec.RecordCount Do       //qExec.RecordCount
//     BEGIN

        //j:=Length(inttostr(i));//判斷資料筆數為幾位數字
//--------------------------------------------------------------S:=StringOfChar(' ', 40)
  //T0:=qExec.Fields[0].Value;   //主項名稱
  T1:=Params[1];   //廠商簡稱
  T2:=Params[8];   //專案代號
  T3:=Params[3];   //金額
  //pcode:=qExec.Fields[5].VALUE;    //廠商統編

  //summary:=inttostr(strtoint(t3)+strtoint(summary));//計算
  summary:=Params[3];   //抓取本期應付

  //判斷是否為 "分期作帳金額" 因為 分期作帳金額 只針對 付款金額



  //-----------------------------------------------------------


    ID1:='1992';   //會計科目
    ID2:='00';   //會計科目子科

     //K1:=6-Length(ID1);         //計算會計科目需要的空白數量
     //K2:=12-Length(ID2);        //計算會計子科目需要的空白數量
  //-----------------------------------------------------------


           aAM_ORG_CR := 0; //貸方原幣金額
           aAM_DB := FloatToCurr(strtofloat(T3))*aRI_EXCHG;    //借方金額*匯率金額
           aAM_CR := 0;     //貸方金額
            //aNM_ACC:='';//科目名稱
            aNM_SUB:='';//子科名稱
           aRM_SLIP:=T0+' '+T1+' '+T2+' '+aINCOME_NO; //備註
           aFG_SETL:='N';
            //aDT_EXPIRE:='';
            //aNN_NOTE:='';
            //aID_SUB2:='';
            //aNM_SUB2:='';
           aAM_ORG_DB:=FloatToCurr(strtofloat(T3));
           aID_SAM:=aLogin_id1;



      InsertSlip_D(aSEQ_NO,Format('%.4d',[S]),aDEPT_NO1,ID1,ID2
                   ,aDBCR_CODE,aID_CRNCY,CurrToStr(aRI_EXCHG),CurrToStr(aAM_DB),CurrToStr(aAM_CR),T3,CurrToStr(aAM_ORG_CR),aNM_ACC
                   ,aNM_SUB,aRM_SLIP,aDT_EXPIRE,aNN_NOTE,aINCOME_NO,T2,aID_SUB2,aNM_SUB2
                   ,aFG_SETL,NO_SLIP_P,CN_SEQ_P,aDT_AMT_RCV,aID_SAM);

  //   S:=S+10;  //新增明細序號

 //    qExec.Next;
 //    END;

//--------------------------------------------------------------------------------

//應付帳款
     str:=inttostr(strtoint(summary));  //應付金額

       ID1:='1992';   //20200428更改為1992
       ID2:=pcode;
       aAM_DB := 0;    //借方金額*匯率金額
       aDEPT_NO1:='';
       aDBCR_CODE:='C';
       aAM_CR:=FloatToCurr(strtofloat(str))*aRI_EXCHG;  //貸方金額
       aAM_ORG_CR:=strtocurr(str);//貸方原幣金額
       S:=S+10;                   //新增明細序號
       T3:='0';
       aID_SAM:=aLogin_id2;

       InsertSlip_D(aSEQ_NO,Format('%.4d',[S]),aDEPT_NO2,ID1,ID2
                   ,aDBCR_CODE,aID_CRNCY,CurrToStr(aRI_EXCHG),CurrToStr(aAM_DB),CurrToStr(aAM_CR),T3,CurrToStr(aAM_ORG_CR),aNM_ACC
                   ,aNM_SUB,aRM_SLIP,aDT_EXPIRE,aNN_NOTE,aINCOME_NO,T2,aID_SUB2,aNM_SUB2
                   ,aFG_SETL,NO_SLIP_P,CN_SEQ_P,aDT_AMT_RCV,aID_SAM);



       InsertSlip_H(aSEQ_NO,aCREATE_DATE,CurrToStr(aAM_CR),aCREATE_DATE,aLogin_id2,aID_DEPT,aINCOME_NO);


       //給待辦
       vInput := VarArrayof(['FAC002','01','NO_APPLY='+aSEQ_NO]);
       ServiceManager.CallExternalMethod('SWorkFlow','SendTodoList',vInput);
       InsertFlowRM('FAC002','01','NO_APPLY='+aSEQ_NO,'保證票據用(過渡存入保證票據傳票) ',aSEQ_NO);


      //拋轉傳票時間寫入進貨明細表中。。並改變進貨狀態職為轉應付

       str1:=(DateTimeToDateString(now()));//拋轉為字串型態的日期格式

      //ShowMessage(AAA);   此為 AP 端, 不能用 showMessage  leo 20200302
      //ShowMessage(datetostr(now())+'拋轉票據編號='+aINCOME_NO+'共計1筆');

       tax:='0';
       summary:='0';

end;








//-------------------------退票-----------------------------------------------
procedure TUIS_CHECK_MANA_SEL.change_to_acc2CallMethod(Params: Variant;
  out ReturnVal: Variant);
var
  //F:TextFile;
  aINCOME_NO,STATUS,str,str1,SUMMARY,TAX,T0,T1,T2,T3,ID1,ID2,aLogin_id1,aLogin_id2,aSEQ_NO,aCREATE_DATE:STRING;
  aDEPT_NO1,aDEPT_NO2,aDBCR_CODE,aDT_EXPIRE,aFG_SETL,aNN_NOTE,aID_SUB2,aNM_SUB2,NO_SLIP_P,CN_SEQ_P,aID_CRNCY:string;
  aNM_ACC,aNM_SUB,aRM_SLIP,pcode,aDT_AMT_RCV,aID_DEPT,aID_SAM,IN_STR,pay_date,N1,n2,n3,n4:string;
  i,j,K,K1,K2,S,m,o1,o2,o3,o4:integer;
  aRI_EXCHG,aAM_ORG_CR,aAM_CR,aAM_DB,aAM_ORG_DB:currency;
  vInput:Variant;
  F:TextFile;
  A:array[0..3] of string;
begin
  aINCOME_NO:=Params[0]; //票據號碼
  aLogin_id1:=Params[4];//作帳人員ID
  aLogin_id2:=Params[4];//會計人員ID
  pay_date:=Params[5]; //支付日期

  //RAISE EXCEPTION.Create(aLogin_id2);

   aDT_EXPIRE:=pay_date;

  aDEPT_NO1:=copy(aLogin_id1,1,2)+'00';  //作帳人員 部門代號
  aDEPT_NO2:=copy(aLogin_id2,1,2)+'00';  //會計人員 部門代號


  A[0]:='';A[1]:='000';A[2]:='00';A[3]:='0';//判斷傳票號碼
  STATUS:='DEF';
  str1:='';
      //--------------------------------------------------------------
// IF FileExists('C:\EEP_7\download\'+aINCOME_NO+'.txt')=FALSE THEN BEGIN
      //--------------------------------------------------------------
        //aSEQ_NO----傳票申請號碼
        //aCREATE_DATE----申請日期
        //aRI_EXCHG----匯率
        aCREATE_DATE := FormatDateTime('yyyymmdd',Now);
        aSEQ_NO := FlowGetAutoNoEx(ServiceManager,'FAC01','DT_APPLY='+aCREATE_DATE+';ID_CLASS=D');
        aRI_EXCHG := 1;
        aDBCR_CODE := 'D';
        aID_CRNCY:='NTD';
        S:=10;                //新增明細序號
   //--------------------------------------------------------------




    //AssignFile(F,'C:\EEP_7\download\'+aINCOME_NO+'.txt');
    //Rewrite(F);
    summary:='0';

//     for i:=1 to qExec.RecordCount Do       //qExec.RecordCount
//     BEGIN

        //j:=Length(inttostr(i));//判斷資料筆數為幾位數字
//--------------------------------------------------------------S:=StringOfChar(' ', 40)
//T0:=qExec.Fields[0].Value;   //主項名稱
T1:=Params[1];   //廠商簡稱
T2:=Params[8];   //專案代號
T3:=Params[3];   //金額
//pcode:=qExec.Fields[5].VALUE;    //廠商統編

//summary:=inttostr(strtoint(t3)+strtoint(summary));//計算
  summary:=Params[3];   //抓取本期應付

  //判斷是否為 "分期作帳金額" 因為 分期作帳金額 只針對 付款金額



  //-----------------------------------------------------------


    ID1:='2931';   //會計科目
    ID2:='00';   //會計科目子科
     //K1:=6-Length(ID1);         //計算會計科目需要的空白數量
     //K2:=12-Length(ID2);        //計算會計子科目需要的空白數量
  //-----------------------------------------------------------


           aAM_ORG_CR := 0; //貸方原幣金額
           aAM_DB := FloatToCurr(strtofloat(T3))*aRI_EXCHG;    //借方金額*匯率金額
           aAM_CR := 0;     //貸方金額
            //aNM_ACC:='';//科目名稱
            //aNM_SUB:='';//子科名稱
           aRM_SLIP:=T0+' '+T1+' '+T2+' '+aINCOME_NO; //備註
           aFG_SETL:='N';
            //aDT_EXPIRE:='';
            //aNN_NOTE:='';
            //aID_SUB2:='';
            //aNM_SUB2:='';
           aAM_ORG_DB:=FloatToCurr(strtofloat(T3));
           aID_SAM:=aLogin_id1;



      InsertSlip_D(aSEQ_NO,Format('%.4d',[S]),aDEPT_NO1,ID1,ID2
                   ,aDBCR_CODE,aID_CRNCY,CurrToStr(aRI_EXCHG),CurrToStr(aAM_DB),CurrToStr(aAM_CR),T3,CurrToStr(aAM_ORG_CR),aNM_ACC
                   ,aNM_SUB,aRM_SLIP,aDT_EXPIRE,aNN_NOTE,aINCOME_NO,T2,aID_SUB2,aNM_SUB2
                   ,aFG_SETL,NO_SLIP_P,CN_SEQ_P,aDT_AMT_RCV,aID_SAM);

 //    S:=S+10;  //新增明細序號

 //    qExec.Next;
 //    END;



//應付帳款
     str:=inttostr(strtoint(summary));  //應付金額

       ID1:='2931';
       ID2:=pcode;
       aAM_DB := 0;    //借方金額*匯率金額
       aDEPT_NO1:='';
       aDBCR_CODE:='C';
       aAM_CR:=FloatToCurr(strtofloat(str))*aRI_EXCHG;  //貸方金額
       aAM_ORG_CR:=strtocurr(str);//貸方原幣金額
       S:=S+10;                   //新增明細序號
       T3:='0';
       aID_SAM:=aLogin_id2;

       InsertSlip_D(aSEQ_NO,Format('%.4d',[S]),aDEPT_NO2,ID1,ID2
                   ,aDBCR_CODE,aID_CRNCY,CurrToStr(aRI_EXCHG),CurrToStr(aAM_DB),CurrToStr(aAM_CR),T3,CurrToStr(aAM_ORG_CR),aNM_ACC
                   ,aNM_SUB,aRM_SLIP,aDT_EXPIRE,aNN_NOTE,aINCOME_NO,T2,aID_SUB2,aNM_SUB2
                   ,aFG_SETL,NO_SLIP_P,CN_SEQ_P,aDT_AMT_RCV,aID_SAM);



       InsertSlip_H(aSEQ_NO,aCREATE_DATE,CurrToStr(aAM_CR),aCREATE_DATE,aLogin_id2,aID_DEPT,aINCOME_NO);

       //給待辦
       vInput := VarArrayof(['FAC002','01','NO_APPLY='+aSEQ_NO]);
       ServiceManager.CallExternalMethod('SWorkFlow','SendTodoList',vInput);
       InsertFlowRM('FAC002','01','NO_APPLY='+aSEQ_NO,'保證票據用(過渡存入保證票據傳票) ',aSEQ_NO);


      //拋轉傳票時間寫入進貨明細表中。。並改變進貨狀態職為轉應付

       str1:=(DateTimeToDateString(now()));//拋轉為字串型態的日期格式

     //ShowMessage(AAA);             此為 AP 端, 不能用 showMessage  leo 20200302
     //ShowMessage(datetostr(now())+'拋轉票據編號='+aINCOME_NO+'共計1筆');

       tax:='0';
       summary:='0';



end;

initialization
  RegisterPackageClass(TUIS_CHECK_MANA_SEL);
end.
